native do
    ##define SDL_MATH
end
#define HEADER_TITLE "LED - 04 (two)"
#include "header.ceu"

par/or do
    await SDL_QUIT;
with
    every SDL_REDRAW do
        _boxRGBA(_REN, 0,0,_REN_W,_REN_H, 0xCC,0xCC,0xCC,0xFF);
    end
with
    var bool is_on = false;
    var SDL_Point p = SDL_Point(100,100);
    par do
        loop do
            par/or do
                loop do
                    await 500ms;
                    is_on = not is_on;
                end
            with
                var _SDL_MouseButtonEvent&& but =
                        await SDL_MOUSEBUTTONDOWN
                        until _SDL_Circle_vs_Mouse((_SDL_Point&&)&&p, 50, but);
            end
            await 2s;
        end
    with
        every SDL_REDRAW do
            _filledCircleRGBA(_REN, p.x,p.y,50, 0xFF,0xFF,0xFF,0xFF);
            if is_on then
                _filledCircleRGBA(_REN, p.x,p.y,47, 0x00,0x88,0x00,0xFF);
            else
                _filledCircleRGBA(_REN, p.x,p.y,47, 0x00,0x00,0x00,0xFF);
            end
        end
    end
with
    var bool is_on = false;
    var SDL_Point p = SDL_Point(300,100);
    par do
        loop do
            par/or do
                loop do
                    await 500ms;
                    is_on = not is_on;
                end
            with
                var _SDL_MouseButtonEvent&& but =
                        await SDL_MOUSEBUTTONDOWN
                        until _SDL_Circle_vs_Mouse((_SDL_Point&&)&&p, 50, but);
            end
            await 2s;
        end
    with
        every SDL_REDRAW do
            _filledCircleRGBA(_REN, p.x,p.y,50, 0xFF,0xFF,0xFF,0xFF);
            if is_on then
                _filledCircleRGBA(_REN, p.x,p.y,47, 0x00,0x88,0x00,0xFF);
            else
                _filledCircleRGBA(_REN, p.x,p.y,47, 0x00,0x00,0x00,0xFF);
            end
        end
    end
with
    every SDL_REDRAW do
        _SDL_RenderPresent(_REN);
    end
end

escape 0;
