#include "sdl.ceu"

input void SDL_REDRAW;
input void SDL_QUIT;
input _SDL_KeyboardEvent&&    SDL_KEYDOWN;
input _SDL_MouseButtonEvent&& SDL_MOUSEBUTTONDOWN;

var _SDL_Window&? win;
    finalize
        win = &_SDL_CreateWindow("SDL 4", _SDL_WINDOWPOS_CENTERED,
                                         _SDL_WINDOWPOS_CENTERED,
                                         800, 480,
                                         _SDL_WINDOW_SHOWN);
    with
        _SDL_DestroyWindow(&&win!);
    end

var int w, h;
_SDL_GetWindowSize(&&win!, &&w, &&h);

var _SDL_Renderer&? ren;
    finalize
        ren = &_SDL_CreateRenderer(&&win!, -1, 0);
    with
        _SDL_DestroyRenderer(&&ren!);
    end

var SDL_Rect  bg     = SDL_Rect(0,0 , w,h);
var SDL_Color bg_clr = SDL_Color(0x00, 0x00, 0x00, 0xFF);

class Rect with
    var _SDL_Renderer& ren;
    var SDL_Rect       rct;
    var int            dt;
do
    this.rct.w = 20;
    this.rct.h = 20;

    var SDL_Color clr = SDL_Color(0xFF, 0xFF, 0xFF, 0xFF);

    event int go_pause;

    par/or do
        pause/if go_pause do
            loop do
                await (this.dt) ms;
                rct.x = rct.x + 1;
                if rct.x > 500 then
                    break;
                end
            end
        end
    with
        var bool is_paused = false;
        loop do
            var _SDL_MouseButtonEvent&& but = await SDL_MOUSEBUTTONDOWN;
            if but:button == _SDL_BUTTON_LEFT then
                if _SDL_Rect_vs_Mouse((_SDL_Rect&&)&&rct, but) then
                    is_paused = not is_paused;
                    emit go_pause => is_paused;
                end
            end
        end
    with
        every SDL_REDRAW do
            _SDL_SetRenderDrawColor(&&ren, clr.r,clr.g,clr.b,0xFF);
            _SDL_RenderFillRect(&&ren, (_SDL_Rect&&)&&rct);
        end
    end
    //await FOREVER;    // disappears but remains on memory
end

event int go_pause_all;

par/or do
    await SDL_QUIT;
with
    every SDL_REDRAW do
        _SDL_SetRenderDrawColor(&&ren!, bg_clr.r,bg_clr.g,bg_clr.b,0xFF);
        _SDL_RenderFillRect(&&ren!, (_SDL_Rect&&)&&bg);
    end
with
    loop do
        par/or do
            pause/if go_pause_all do
                do
                    pool Rect[50] rs;
                    every 1s do
                        native _rand();
                        spawn Rect in rs with
                            this.ren = &ren!;
                            this.dt  =  10 + _rand()%20;
                            this.rct = SDL_Rect(100,100+_rand()%300, 0,0);
                        end;
                    end
                end
            end
        with
            var int is_paused = false;
            loop do
                var _SDL_KeyboardEvent&& key = await SDL_KEYDOWN;
                if key:keysym.sym == _SDLK_ESCAPE then
                    break;
                else/if key:keysym.sym == _SDLK_p then
                    is_paused = not is_paused;
                    emit go_pause_all => is_paused;
                end
            end
        end
    end
with
    every SDL_REDRAW do
        _SDL_RenderPresent(&&ren!);
    end
end

escape 0;
