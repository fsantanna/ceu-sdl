#define ALL

native do
    SDL_Window*   WIN = NULL;
    SDL_Renderer* REN = NULL;
    int REN_W, REN_H;
    ##define SDL_MATH
end

#include "sdl.ceu"
#include "sdl-gfx.ceu"

input void SDL_QUIT;
input void SDL_REDRAW;
input int  SDL_DT;
input _SDL_KeyboardEvent&&    SDL_KEYDOWN;
input _SDL_MouseButtonEvent&& SDL_MOUSEBUTTONDOWN;

#ifdef CEU_TIMEMACHINE
input int SDL_DT;
global do
#endif

finalize
    _WIN = _SDL_CreateWindow("DEMO",
            _SDL_WINDOWPOS_UNDEFINED, _SDL_WINDOWPOS_UNDEFINED,
            600, 400, _SDL_WINDOW_SHOWN);
with
    _SDL_DestroyWindow(_WIN);
end

_SDL_GetWindowSize(_WIN, &&_REN_W, &&_REN_H);

finalize
    _REN = _SDL_CreateRenderer(_WIN, -1, 0);
with
    _SDL_DestroyRenderer(_REN);
end

#ifdef CEU_TIMEMACHINE
end
#endif

var int ex = 1;

#define MAX 10

par/or do
    loop do
        do
            // show blank screen
            _SDL_SetWindowTitle(_WIN, "-- blank --");
            watching SDL_KEYDOWN do
                every SDL_REDRAW do
                    _SDL_SetRenderDrawColor(_REN, 0x00,0x00,0x00, 0xFF);
                    _SDL_RenderFillRect(_REN, null);
                    _SDL_RenderPresent(_REN);
                end
            end
        end
        par/or do
            if ex == 1 then
                #undef  Title
                #define Title Title1
                #include "Curry-On/led-01.ceu"
            else/if ex == 2 then
                #undef  Title
                #define Title Title2
                #include "Curry-On/led-02.ceu"
            else/if ex == 3 then
                #undef  Title
                #define Title Title3
                #include "Curry-On/led-03.ceu"
            else/if ex==4 or ex==8 then
                #undef  Title
                #define Title Title1
                #undef  Ball
                #define Ball Ball1
                #undef  Integral_Over_Time
                #define Integral_Over_Time Integral_Over_Time1
                #include "Curry-On/ball-06.ceu"
            else/if ex == 5 then
                #undef  Title
                #define Title Title2
                #undef  Ball
                #define Ball Ball2
                #include "Curry-On/ball-01.ceu"
            else/if ex == 6 then
                #undef  Title
                #define Title Title3
                #undef  Ball
                #define Ball Ball3
                #undef  Integral_Over_Time
                #define Integral_Over_Time Integral_Over_Time3
                #include "Curry-On/ball-04.ceu"
            else/if ex == 7 then
                #undef  Title
                #define Title Title4
                #undef  Ball
                #define Ball Ball4
                #undef  Integral_Over_Time
                #define Integral_Over_Time Integral_Over_Time4
                #include "Curry-On/ball-05.ceu"
            else/if ex == 9 then
                #undef  Title
                #define Title Title5
                #undef  Ball
                #define Ball Ball5
                #undef  Integral_Over_Time
                #define Integral_Over_Time Integral_Over_Time5
                #undef  Move_Until_Button
                #define Move_Until_Button Move_Until_Button5
                #undef  Player
                #define Player Player5
                #include "Curry-On/ball-09.ceu"     // class, 2p
            else/if ex == 10 then
                #undef  Title
                #define Title Title6
                #undef  Ball
                #define Ball Ball6
                #undef  Integral_Over_Time
                #define Integral_Over_Time Integral_Over_Time6
                #undef  Move_Until_Button
                #define Move_Until_Button Move_Until_Button6
                #undef  Player
                #define Player Player6
                #include "Curry-On/ball-10.ceu"     // graph
            else
                await FOREVER;
            end
        with
            loop do
                var _SDL_KeyboardEvent&& key = await SDL_KEYDOWN;
                if key:keysym.sym==_SDLK_r or key:keysym.sym==_SDLK_DOWN or
                                              key:keysym.sym==_SDLK_UP then
                    ex = ex;
                    break;
                else/if key:keysym.sym==_SDLK_p or key:keysym.sym==_SDLK_LEFT then
                    ex = ex - 1;
                    break;
                else/if key:keysym.sym==_SDLK_n or key:keysym.sym==_SDLK_RIGHT then
                    ex = ex + 1;
                    break;
                end
            end
            if ex < 1 then
                ex = MAX;
            else/if ex > MAX then
                ex = 1;
            end
        end
    end
with
    await SDL_QUIT;
end

escape 0;
